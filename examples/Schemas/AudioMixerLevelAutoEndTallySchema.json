{
	"title": "NMOS_Realtime_Event_Grain",
	"properties": {
		"source_id": {
			"type": "string",
			"description": "Unique identifier of the Source that produced the Grain",
			"pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
		},
		"flow_id": {
			"type": "string",
			"description": "Unique identifier of the Flow that contains the Grain",
			"pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
		},
		"origin_timestamp": {
			"type": "string",
			"description": "A TimeStamp representing the capture time of the Grain Payload. For Grain Payloads with multiple samples, this shall be the sample time of the first sample. When capturing from a live source this should match the SyncTimeStamp. When replaying stored essence this should be populated from the Origin Timestamp of the stored Grain.",
			"pattern": "(\\d+)(:)(\\d+)"
		},
		"sync_timestamp": {
			"type": "string",
			"description": "a TimeStamp representing the capture or playback time of the Grain Payload. For Grain Payloads with multiple samples, this shall be the sample time of the first sample.",
			"pattern": "(\\d+)(:)(\\d+)"
		},
		"type": {
			"type": "string",
			"default": "AudioMixerLevelAutoEndTally",
			"description": "Typical usage is to denote the event type"
		},
		"grain_type": {
			"type": "string",
			"default": "Event",
			"description": "Defines the grain type"
		},
		"grain_duration": {
			"type": "number",
			"description": "Duration of the grain",
			"minimum": 0
		},
		"origin_timecode": {
			"type": "string",
			"description": "The Origin TimeStamp in SMPTE ST 12-1 (SMPTE 12M) TimeCode",
			"pattern": "/(^(?:(?:[0-1][0-9]|[0-2][0-3]):)(?:[0-5][0-9]:){2}(?:[0-2][0-9])$)/"
		},
		"sync_timecode": {
			"type": "string",
			"description": "The Sync TimeStamp in SMPTE ST 12-1 (SMPTE 12M) TimeCode",
			"pattern": "/(^(?:(?:[0-1][0-9]|[0-2][0-3]):)(?:[0-5][0-9]:){2}(?:[0-2][0-9])$)/"
		},
		"control_id": {
			"type": "string",
			"description": "Unique identifier of the Control that produced the Grain.",
			"pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
		},
		"sync_id": {
			"type": "string",
			"description": "Unique identifier.",
			"pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
		},
		"device_id": {
			"type": "string",
			"description": "Unique identifier of the Device that produced the Grain.",
			"pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
		},
		"description": {
			"type": "string"
		},
		"label": {
			"type": "string"
		},
		"nmemonic": {
			"type": "string"
		},
		"value": {
			"type": "string"
		},
		"creation_timestamp": {
			"type": "string",
			"description": "A TimeStamp representing the creation time of the Grain",
			"pattern": "(\\d+)(:)(\\d+)"
		},
		"time_offset": {
			"type": "integer",
			"description": "Integer representing a time offset in milliseconds",
			"minimum": 0,
			"format": "int32"
		},
		"state": {
			"type": "integer",
			"description": "Used to indicate the state as an integer",
			"minimum": 0
		},
		"position": {
			"type": "integer"
		},
		"minimum": {
			"type": "integer"
		},
		"maximum": {
			"type": "integer"
		},
		"step_size": {
			"type": "integer"
		},
		"default_position": {
			"type": "integer"
		},
		"status_map": {
			"type": "array",
			"description": "An array of statuses, each consisting of a name (string) and a description (string)",
			"items": {
				"type": "object",
				"required": ["name", "description"],
				"properties": {
					"name": {
						"type": "string",
						"description": "A name for the status pair"
					},
					"description": {
						"type": "string",
						"description": "The status description."
					}
				}
			}
		},
		"extended": {
			"additionalProperties": true,
				"properties": {
				"audio_mixer_id": {
					"description": "Identifier for the audio mixer to be used",
					"type": "string"
				},
				"source_slot_alias": {
					"description": "Human alias for the source_slot_id",
					"type": "string"
				},
				"source_slot_id": {
					"description": "Identifier for the source to be mixed into the target",
					"type": "string"
				},
				"end_level": {
					"description": "End level for the mix in dB",
					"type": "string"
				},
				"target_slot_alias": {
					"description": "Human alias for the target_slot_id",
					"type": "string"
				},
				"target_slot_id": {
					"description": "Identifier for the output of the mix",
					"type": "string"
				}
			},
			"required": [
				"source_slot_id",
				"target_slot_id",
				"end_level",
				"audio_mixer_id"
			],
			"type": "object"
		}
	},
	"required": [
		"type",
		"flow_id",
		"grain_type",
		"origin_timestamp",
		"source_id",
		"extended"
	],
	"type": "object"
}